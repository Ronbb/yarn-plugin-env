/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-env",
factory: function (require) {
var plugin;(()=>{var e={347:(e,t,n)=>{const r=n(747),o=n(622);function s(e){console.log("[dotenv][DEBUG] "+e)}const c=/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/,i=/\\n/g,l=/\n|\r|\r\n/;function a(e,t){const n=Boolean(t&&t.debug),r={};return e.toString().split(l).forEach((function(e,t){const o=e.match(c);if(null!=o){const e=o[1];let t=o[2]||"";const n=t.length-1,s='"'===t[0]&&'"'===t[n];"'"===t[0]&&"'"===t[n]||s?(t=t.substring(1,n),s&&(t=t.replace(i,"\n"))):t=t.trim(),r[e]=t}else n&&s(`did not match key and value when parsing line ${t+1}: ${e}`)})),r}e.exports.v=function(e){let t=o.resolve(process.cwd(),".env"),n="utf8",c=!1;e&&(null!=e.path&&(t=e.path),null!=e.encoding&&(n=e.encoding),null!=e.debug&&(c=!0));try{const e=a(r.readFileSync(t,{encoding:n}),{debug:c});return Object.keys(e).forEach((function(t){Object.prototype.hasOwnProperty.call(process.env,t)?c&&s(`"${t}" is already defined in \`process.env\` and will not be overwritten`):process.env[t]=e[t]})),{parsed:e}}catch(e){return{error:e}}}},747:e=>{"use strict";e.exports=require("fs")},622:e=>{"use strict";e.exports=require("path")}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{"use strict";n.r(r),n.d(r,{default:()=>t});var e=n(347);const t={hooks:{setupScriptEnvironment:async(t,n)=>{const{parsed:r,error:o}=(0,e.v)();o||r&&Object.keys(r).forEach(e=>{if(!n[e]){const t=r[e];n[e]=t}})}}}})(),plugin=r})();
return plugin;
}
};